<launch>
  <include file="$(find surge_et_ambula)/launch/gazebo_simul/justina_hardware_gazebo.launch"/>
  
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find config_files)/rviz/justina.rviz"/>
  
  <node name="justina_gui" pkg="justina_gui" type="justina_gui_node" output="screen">
    <param name="la_predefined" value="$(find config_files)/manipulation/la_predefined.yaml"/>
    <param name="ra_predefined" value="$(find config_files)/manipulation/ra_predefined.yaml"/>
    <param name="hd_predefined" value="$(find config_files)/manipulation/hd_predefined.yaml"/>
  </node>

  <include file="$(find surge_et_ambula)/launch/gazebo_simul/justina_controllers.launch"/>
  <include file="$(find surge_et_ambula)/launch/navigation.launch">
    <arg name="static_map_file"  value="$(find config_files)/maps/appartment.yaml"/>
    <arg name="prohibition_map_file"  value="$(find config_files)/prohibition_maps/appartment.yaml"/>
    <arg name="initial_pose_x" value="3.25"/>
    <arg name="initial_pose_y" value="6.30"/>
    <arg name="initial_pose_a" value="-1.57"/>
    <arg name="laser_scan_topic" value="/hardware/scan"/>
    <arg name="point_cloud_topic" value="/hardware/kinect/rgbd_wrt_kinect"/>
    <arg name="use_lidar" value="True"/>
    <arg name="use_sonars" value="False"/>
    <arg name="use_point_cloud" value="True"/>
    <arg name="cloud_downsampling" value="9"/>
    <arg name="cloud_points_threshold" value="50"/>
    <arg name="lidar_points_threshold" value="5"/>
  </include>

  <node name="la_inverse_kinematics" pkg="inverse_kinematics" type="ik_numeric.py" output="screen">
    <rosparam command="load" file="$(find config_files)/manipulation/la_inverse_kinematics.yaml"/>
    <remap from="/manipulation/forward_kinematics" to="/manipulation/la_forward_kinematics"/>
    <remap from="/manipulation/ik_trajectory"      to="/manipulation/la_ik_trajectory"     />
    <remap from="/manipulation/ik_pose"            to="/manipulation/la_ik_pose"           />
    <remap from="/manipulation/polynomial_trajectory" to="/manipulation/la_polynomial_trajectory"/>
  </node>
  <node name="ra_inverse_kinematics" pkg="inverse_kinematics" type="ik_numeric.py" output="screen">
    <rosparam command="load" file="$(find config_files)/manipulation/ra_inverse_kinematics.yaml"/>
    <remap from="/manipulation/forward_kinematics" to="/manipulation/ra_forward_kinematics"/>
    <remap from="/manipulation/ik_trajectory"      to="/manipulation/ra_ik_trajectory"     />
    <remap from="/manipulation/ik_pose"            to="/manipulation/ra_ik_pose"           />
    <remap from="/manipulation/polynomial_trajectory" to="/manipulation/ra_polynomial_trajectory"/>
  </node>
  <!-- <node name="arm_trajectory_tracking" pkg="trajectory_tracking" type="traj_tracking.py" output="screen"/> -->
  <!--node name="obj_reco" pkg="obj_reco" type="obj_reco_node" output="screen">
    <param name="training_dir" value="$(find obj_reco)/training_simul"/>
  </node-->

  <node name="sound_play" pkg="sound_play" type="soundplay_node.py" output="screen"/>

  <!-- <node name="speech_recog" pkg="sprec_pocketsphinx" type="asr.py"> -->
  <!--   <remap from="jsgf_audio" to="sphinx_audio" /> -->
  <!--   <param name="gram" value="$(find sprec_pocketsphinx)/vocab/gpsr"/> -->
  <!--   <param name="dict" value="$(find sprec_pocketsphinx)/vocab/gpsr.dic"/> -->
  <!--   <param name="grammar" value="gpsr_gram"/> -->
  <!--   <param name="rule" value="simple_command"/> -->
  <!--   <param name="lm" value=":default"/> -->
  <!--   <param name="hmm" value=":default"/> -->
  <!-- </node> -->

  <!-- <node name="audio_control" pkg="sprec_pocketsphinx" type="send_audio.py" output="screen"> -->
  <!--   <param name="input" value=":default"/> -->
  <!-- </node> -->

</launch>
